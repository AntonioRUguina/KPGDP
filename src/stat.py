import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

SD = [253.3, 266.7, 258.5, 274.2, 255.0, 263.0, 261.1, 262.8, 263.0, 263.5, 243.6, 260.1, 272.6, 210.1, 290.8, 253.0, 270.2, 272.6, 258.1, 260.1, 263.0, 232.9, 220.7, 254.2, 263.0, 259.8, 258.7, 246.4, 251.9, 258.1, 251.3, 259.8, 254.0, 259.8, 254.2, 249.7, 241.6, 241.6, 240.2, 263.0, 247.9, 221.1, 258.1, 259.0, 258.5, 275.5, 255.0, 275.5, 277.0, 252.6, 255.0, 272.3, 251.6, 239.7, 275.5, 263.0, 263.0, 242.9, 279.0, 252.2, 221.7, 253.6, 263.0, 257.7, 262.8, 266.7, 263.5, 280.0, 241.5, 257.6, 283.1, 243.6, 256.6, 238.6, 250.4, 254.2, 220.0, 266.7, 258.9, 263.5, 266.7, 258.1, 223.7, 249.6, 265.8, 237.2, 255.4, 254.8, 254.2, 266.7, 259.8, 236.6, 277.6, 263.5, 231.7, 247.9, 266.7, 252.7, 250.2, 254.3, 254.2, 250.2, 270.2, 268.5, 252.9, 240.5, 254.2, 269.1, 241.1, 249.7, 266.7, 252.0, 267.8, 263.5, 235.7, 254.8, 250.1, 225.1, 263.5, 263.0, 255.2, 271.3, 261.9, 271.1, 259.8, 233.0, 275.6, 237.4, 263.5, 241.6, 260.4, 263.5, 254.2, 266.7, 262.8, 241.6, 261.4, 263.0, 257.7, 259.0, 252.7, 283.3, 262.3, 258.5, 262.9, 251.1, 223.7, 223.8, 234.1, 228.7, 246.7, 218.3, 266.7, 254.2, 274.2, 241.6, 251.9, 258.5, 259.3, 266.7, 263.0, 249.7, 274.2, 256.1, 256.7, 262.8, 252.9, 262.5, 266.7, 252.6, 229.2, 252.2, 266.7, 263.5, 263.0, 271.2, 265.7, 266.7, 232.3, 266.7, 257.7, 270.2, 266.7, 274.2, 263.0, 246.4, 225.1, 255.3, 226.7, 239.1, 260.4, 263.5, 266.7, 251.8, 266.7, 232.0, 257.9, 238.7, 263.0, 245.4, 240.9, 263.0, 244.8, 238.0, 267.9, 235.1, 258.5, 262.8, 256.7, 263.5, 220.9, 231.6, 250.7, 230.5, 242.1, 250.4, 261.4, 235.8, 252.9, 227.2, 263.0, 232.3, 266.7, 225.9, 263.0, 258.5, 263.5, 249.7, 253.0, 264.1, 275.5, 243.7, 240.2, 263.5, 249.7, 258.2, 266.7, 263.0, 241.6, 263.5, 266.7, 252.4, 254.2, 266.7, 266.7, 246.2, 245.4, 236.8, 258.1, 248.4, 266.7, 271.1, 263.0, 269.1, 242.2, 261.5, 244.3, 253.0, 245.2, 252.6, 244.8, 266.7, 266.7, 263.0, 255.2, 263.0, 263.0, 254.2, 245.0, 264.8, 252.6, 248.5, 254.2, 277.0, 244.5, 239.7, 255.0, 237.0, 262.1, 224.0, 247.3, 266.5, 241.1, 266.7, 263.5, 259.8, 249.4, 255.9, 256.4, 263.0, 250.4, 263.0, 243.9, 250.9, 266.7, 218.4, 251.6, 259.1, 228.7, 258.7, 254.0, 251.1, 252.2, 259.8, 263.5, 237.4, 245.0, 243.0, 259.6, 224.7, 266.7, 230.6, 261.6, 282.1, 262.9, 259.7, 242.6, 263.0, 266.5, 238.0, 271.1, 220.3, 261.6, 251.3, 246.2, 248.1, 249.7, 236.6, 275.2, 250.6, 266.7, 251.9, 253.0, 249.7, 223.8, 258.3, 259.8, 248.6, 263.5, 252.4, 218.6, 239.0, 249.8, 251.1, 255.2, 270.2, 249.0, 251.0, 247.4, 226.8, 233.5, 239.6, 232.0, 265.6, 267.3, 230.5, 266.7, 247.3, 243.7, 246.7, 262.1, 262.8, 254.2, 268.5, 272.6, 254.2, 254.2, 252.4, 254.2, 236.6, 271.6, 255.4, 266.7, 255.4, 240.0, 257.0, 259.6, 264.5, 256.1, 266.7, 257.7, 251.1, 253.4, 242.8, 270.6, 250.4, 258.5, 243.0, 258.0]

GD = [240.8, 221.7, 254.1, 249.4, 238.6, 252.7, 251.2, 253.0, 199.8, 233.8, 246.4, 233.8, 246.4, 246.4, 235.6, 262.8, 250.0, 257.4, 228.3, 258.3, 244.4, 205.7, 246.4, 247.1, 229.7, 254.3, 249.7, 248.9, 261.6, 233.9, 223.8, 250.5, 211.3, 220.2, 267.3, 240.4, 234.4, 240.8, 208.8, 203.0, 255.6, 247.9, 265.2, 213.6, 236.0, 246.1, 205.8, 213.2, 254.3, 240.2, 225.7, 227.3, 212.7, 255.2, 247.4, 219.9, 253.0, 228.3, 229.9, 213.2, 245.8, 256.7, 241.4, 240.3, 260.1, 221.0, 211.4, 240.4, 236.2, 259.7, 225.0, 222.9, 229.3, 214.4, 255.2, 202.4, 239.4, 266.7, 252.7, 252.9, 261.2, 245.8, 257.9, 252.7, 226.1, 227.2, 285.3, 214.9, 228.8, 236.5, 232.1, 215.5, 249.8, 215.7, 275.5, 221.8, 252.7, 215.1, 245.8, 241.6, 223.9, 238.6, 262.2, 237.4, 216.2, 240.2, 229.3, 251.8, 234.3, 219.1, 232.1, 238.3, 234.9, 268.1, 215.4, 255.3, 228.9, 220.4, 250.8, 214.5, 229.3, 249.7, 239.7, 215.4, 225.1, 250.5, 266.7, 215.0, 218.6, 217.3, 252.1, 239.3, 214.4, 257.7, 235.1, 227.2, 252.6, 216.4, 214.3, 235.2, 237.7, 229.7, 259.2, 236.4, 253.0, 241.8, 272.0, 232.2, 217.5, 243.9, 263.5, 249.8, 235.2, 251.9, 240.3, 269.3, 271.1, 214.9, 227.8, 235.5, 224.1, 215.9, 221.0, 236.4, 219.7, 227.1, 249.7, 235.2, 258.0, 230.4, 257.7, 258.5, 215.1, 250.0, 223.9, 219.8, 216.4, 227.1, 241.5, 224.4, 237.9, 240.2, 239.9, 255.6, 266.7, 254.3, 246.6, 226.0, 260.1, 251.1, 248.0, 257.3, 214.6, 263.0, 239.5, 248.5, 223.0, 240.3, 245.1, 232.6, 246.9, 254.6, 218.6, 219.0, 263.5, 237.1, 261.8, 229.2, 227.1, 244.1, 266.7, 220.4, 268.0, 251.6, 251.1, 252.8, 246.7, 214.8, 246.6, 238.0, 249.5, 214.3, 235.1, 240.0, 218.7, 224.6, 252.8, 233.4, 237.3, 220.3, 226.8, 237.4, 235.4, 214.6, 214.4, 231.9, 254.0, 262.8, 256.4, 262.2, 260.9, 255.9, 218.6, 243.6, 251.5, 224.7, 223.6, 261.4, 272.0, 230.5, 252.8, 237.0, 237.3, 254.8, 234.6, 246.4, 258.2, 222.3, 243.2, 239.0, 242.7, 233.2, 251.3, 237.6, 242.7, 237.2, 219.2, 246.4, 218.3, 215.1, 233.4, 257.6, 258.0, 256.7, 224.7, 220.6, 243.3, 226.0, 236.9, 243.3, 248.9, 219.9, 247.0, 251.8, 265.1, 226.8, 227.5, 243.8, 218.2, 250.8, 246.1, 235.3, 237.4, 258.5, 246.0, 220.5, 241.7, 259.0, 218.9, 253.0, 241.5, 263.0, 258.5, 258.5, 253.7, 262.6, 230.6, 221.1, 249.9, 265.6, 214.0, 254.8, 238.0, 218.9, 214.0, 266.7, 266.5, 258.0, 252.4, 250.8, 229.3, 226.0, 248.4, 252.6, 248.5, 239.2, 224.0, 246.0, 237.4, 257.2, 238.8, 242.2, 241.8, 249.4, 227.2, 245.2, 256.7, 236.9, 242.2, 239.4, 253.7, 245.1, 237.4, 235.7, 0, 243.4, 226.8, 276.3, 251.5, 245.8, 220.0, 230.7, 264.1, 258.5, 220.7, 254.3, 246.8, 223.2, 243.2, 263.6, 250.6, 247.1, 234.7, 263.1, 249.8, 253.0, 216.6, 224.0, 224.1, 241.6, 220.3, 231.8, 241.5, 233.0, 225.1, 230.0, 220.5, 249.0, 218.2, 258.1, 233.8, 219.2, 230.4, 214.0, 244.5, 250.6, 258.2, 225.1, 236.6, 221.7, 256.4, 260.1, 250.7, 275.0, 215.0, 223.0, 227.0, 265.7, 263.5, 246.6, 236.2, 215.6, 255.4, 252.9, 238.3, 225.4, 217.1, 232.0, 238.0, 238.9, 244.0, 234.2, 227.6, 247.6, 223.6, 215.0, 216.7, 236.7, 258.3, 219.9, 246.2, 221.1, 241.9, 215.0, 252.2, 241.2, 229.2, 243.2, 223.2, 242.2, 257.0, 266.7, 218.7, 216.8, 252.4, 221.2, 251.9, 251.2, 220.4, 242.1, 218.3, 214.8, 230.6, 236.7, 244.0, 239.7, 243.6, 226.8, 220.9, 266.6, 247.4, 214.8, 235.2, 220.9, 226.1, 237.3, 235.7, 219.7, 246.4, 241.1, 226.8, 216.0, 220.6, 214.9, 250.5, 238.3, 223.0, 239.3, 244.4, 248.5, 226.7, 227.1, 232.4, 218.1, 237.0, 233.0, 228.6, 242.2, 250.7, 229.0, 220.7, 230.4, 227.2, 263.0, 267.9, 251.3, 252.5, 270.1, 246.4, 232.1, 252.5, 221.7, 251.5, 246.4, 266.7, 223.8, 238.5, 223.0, 241.6, 247.7, 233.4, 237.4, 222.5, 235.8, 222.2, 267.9, 253.1, 245.9, 250.8, 238.9, 267.9, 224.3, 247.9, 246.1, 259.1, 274.9, 252.7, 238.3, 223.3, 256.6, 218.5, 241.8, 214.7, 224.1, 252.8, 244.6, 219.1, 229.6, 263.5, 254.2, 223.7, 253.6, 218.5, 257.2, 258.3, 217.1, 219.8, 270.9, 269.0, 259.7, 216.3, 250.2, 220.5, 223.0, 219.4, 262.8, 237.4, 235.8, 249.7, 251.8, 249.6, 215.2, 218.9, 247.9, 226.2, 235.6, 239.4, 216.9, 261.5, 231.6, 242.8, 241.0, 243.2, 248.6, 238.9, 224.1, 247.9, 214.0, 233.5, 249.3, 215.4, 217.5, 246.7, 221.7, 217.5, 231.9, 214.7, 246.4, 219.2, 244.6, 259.2, 251.3, 237.2, 251.0, 228.4, 215.4, 252.6, 230.7, 233.5, 261.6, 230.1, 244.9, 231.6, 238.3, 257.6, 235.4, 262.7, 250.2, 242.5, 228.8, 238.3, 220.4, 251.1, 251.8, 241.4, 240.3, 219.1, 254.1, 252.9, 255.7, 219.7, 227.1, 224.1, 246.0, 236.6, 259.7, 266.7, 258.1, 255.6, 219.4, 221.3, 233.3, 233.0, 237.0, 247.7, 241.2, 241.6, 250.4, 245.7, 255.4, 215.3, 246.3, 259.7, 251.2, 215.8, 220.2, 215.8, 242.7, 264.0, 257.7, 218.7, 221.1, 244.6, 215.0, 249.7, 236.2, 253.3, 237.4, 214.1, 245.6, 225.5, 222.7, 249.8, 238.2, 252.4, 249.3, 234.4, 218.9, 247.2, 255.2, 217.6, 225.1, 218.4, 242.9, 258.5, 248.5, 257.5, 255.2, 248.2, 233.0, 244.9, 226.7, 222.7, 226.4, 229.3, 235.2, 234.0, 240.2, 235.8, 219.1, 225.6, 226.6, 242.5, 219.2, 225.0, 250.6, 225.0, 240.2, 244.2, 263.0, 269.4, 262.1, 236.9, 227.2, 214.1, 219.4, 227.8, 251.2, 219.5, 252.0, 241.6, 253.6, 239.7, 239.5, 242.1, 237.3, 246.7, 266.9, 235.3, 245.7, 222.3, 222.9, 223.0, 263.6, 217.5, 254.2, 214.2, 254.2, 265.7, 228.6, 265.0, 250.0, 254.2, 233.9, 243.8, 231.3, 247.4, 217.3, 230.6, 247.9, 236.4, 218.2, 258.5, 251.2, 263.4, 242.6, 231.8, 241.1, 251.1, 262.8, 240.4, 256.3, 244.8, 263.0, 234.1, 218.7, 230.9, 258.4, 259.0, 273.0, 263.0, 234.1, 229.7, 214.8, 241.5, 248.6, 232.0, 246.0, 228.7, 245.8, 217.5, 231.5, 241.6, 246.6, 240.2, 251.6, 262.7, 270.8, 286.8, 259.2, 232.2, 258.5, 226.6, 229.6, 246.4, 251.3, 238.0, 263.4, 236.2, 242.1, 219.7, 228.8, 238.7, 241.5, 227.1, 246.4, 252.6, 239.0, 228.6, 257.6, 218.1, 256.6, 264.5, 242.8, 258.5, 220.3, 248.6, 266.7, 246.4, 241.6, 233.0, 216.5, 252.2, 237.7, 253.2, 219.8, 261.2, 269.4, 249.2, 266.7, 246.8, 281.2, 253.4, 258.9, 224.1, 237.4, 228.9, 237.4, 228.5, 264.1, 260.9, 254.2, 238.8, 266.5, 236.3, 259.8, 263.5, 228.7, 253.0, 238.2, 249.0, 249.7, 217.9, 216.9, 240.8, 247.1, 239.9, 258.9, 244.0, 255.2, 235.8, 263.0, 218.9, 231.5, 225.4, 249.3, 266.7, 244.9, 253.6, 270.9, 255.0, 218.3, 217.5, 240.3, 261.7, 263.5, 218.4, 240.0, 235.3, 216.8, 233.0, 224.6, 229.3, 253.3, 275.2, 263.4, 228.0, 236.4, 227.3, 265.8, 215.3, 248.6, 258.3, 218.2, 251.2, 254.2, 252.9, 231.5, 261.2, 228.1, 238.9, 216.7, 229.4, 254.3, 242.7, 220.9, 246.4, 247.4, 216.3, 222.0, 255.2, 244.6, 241.8, 254.1, 221.1, 237.6, 236.9, 260.1, 223.2, 219.0, 246.8, 246.4, 266.2, 239.2, 250.8, 215.3, 238.6, 251.1, 223.8, 235.1, 231.8, 249.7, 262.9, 255.2, 251.3, 262.8, 252.8, 229.3, 226.6, 232.3, 237.1, 227.1, 257.5, 215.4, 262.8, 222.6, 261.5, 223.2, 237.7, 216.5, 263.0, 255.1, 232.3, 242.4, 228.0, 234.9, 239.2, 230.8, 250.5, 225.0, 269.0, 245.5, 218.9, 229.2, 232.3, 215.4, 254.1, 221.5, 221.2, 263.0, 242.8, 250.4, 242.6, 262.2, 218.6, 222.4, 252.6, 225.7, 266.7, 248.4, 255.2, 239.7, 255.2, 220.0, 255.4, 234.0, 257.3, 221.8, 242.6, 222.2, 223.2, 233.0, 216.3, 253.3, 246.9, 217.5, 227.3, 227.5, 264.9, 224.4, 216.3, 215.2, 233.0, 259.2, 250.8, 265.8, 247.9, 235.5, 258.6, 223.5, 223.9, 245.8, 217.8, 266.7, 235.7, 240.8, 217.5, 238.0, 238.6, 238.9, 215.8, 224.7, 250.2, 252.2, 254.4, 252.9, 240.8, 230.5, 215.8, 238.0, 226.1, 251.3, 240.5, 236.4, 237.0, 251.3, 252.7, 239.3, 216.5, 227.5, 255.2, 247.9, 223.9, 243.0, 220.6, 219.8, 250.8, 227.4, 240.3, 258.5, 220.2, 244.6, 261.4, 246.4, 257.3, 248.2, 221.5, 271.6, 258.5, 245.2, 238.7, 232.4, 232.2, 232.1, 217.7, 220.1, 226.9, 250.7, 262.8, 218.1, 253.3, 255.2, 219.0, 248.5, 256.9, 256.5, 233.1, 246.2, 271.1, 269.6, 259.6, 229.3, 234.0, 261.5, 234.6, 263.5, 262.8, 219.9, 255.6, 225.1, 237.3, 243.6, 232.1, 252.4, 227.7, 241.0, 226.9, 271.1, 250.5, 218.0, 234.8, 267.9, 266.7, 263.1, 270.3, 251.0, 228.9, 258.5, 249.4, 224.9, 219.9, 222.4, 233.1, 251.1, 228.6, 259.6, 230.6, 222.2, 223.2, 258.7, 223.0, 262.6, 260.2, 254.4, 215.3, 225.3, 218.6, 269.0, 238.0, 256.7, 216.8, 219.9, 222.4, 255.9, 230.2, 234.6, 253.7, 217.2, 252.9, 236.4, 225.0, 228.9, 259.2, 246.7, 243.8, 233.9, 227.8, 229.3, 248.4, 277.0, 247.4, 220.9, 255.2, 253.3, 219.7, 244.3, 243.6, 248.6, 232.0, 234.6, 256.4, 218.2, 218.1, 227.1, 257.7, 232.3, 250.7, 234.1, 221.0, 243.6, 220.5, 218.3, 259.1, 232.0, 242.9, 256.3, 255.4, 224.1, 223.0, 225.8, 235.2, 238.0, 257.9, 242.6, 226.3, 228.3, 250.0, 232.4, 257.9, 236.2, 229.6, 226.8, 253.0, 253.0, 258.5, 252.9, 242.6, 241.6, 233.6, 263.5, 241.0, 257.6, 220.9, 217.0, 242.8, 249.8, 266.7, 215.4, 254.2, 262.8, 262.6, 258.5, 258.6, 218.9, 284.1, 220.8, 258.5, 244.4, 237.5, 265.6, 266.7, 216.0, 228.0, 220.3, 262.6, 235.6, 216.5, 251.1, 262.8, 269.4, 259.7, 268.2, 251.6, 220.3, 218.8, 254.4, 284.2, 249.7, 274.2, 239.3, 234.1, 217.2, 215.9, 242.8, 253.3, 257.9, 256.6, 219.8, 248.6, 215.5, 254.3, 251.2, 269.9, 227.1, 231.6, 246.2, 268.6, 227.8, 233.8, 223.8, 227.1, 263.6, 227.2, 220.0, 236.6, 215.6, 222.3, 254.2, 249.0, 247.9, 248.5, 262.8, 223.0, 241.6, 244.9, 250.5, 239.6, 227.2, 220.4, 233.3, 248.5, 261.9, 263.5, 241.1, 251.8, 219.2, 219.7, 266.7, 221.6]

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats


def hypothesis_test(arr1, arr2, alpha=0.05):
    """
    Perform a hypothesis test (Welch’s t-test or Mann-Whitney U test)
    to check if the means of two datasets are significantly different.
    """
    # Check for normality
    normal1 = stats.shapiro(arr1).pvalue > alpha
    normal2 = stats.shapiro(arr2).pvalue > alpha

    # Choose appropriate test
    if normal1 and normal2:
        stat, p_value = stats.ttest_ind(arr1, arr2, equal_var=False)  # Welch's t-test
        test_used = "T-test (Welch's)"
    else:
        stat, p_value = stats.mannwhitneyu(arr1, arr2, alternative='two-sided')
        test_used = "Mann-Whitney U test"

    # Print hypothesis test results
    print(f"Test used: {test_used}")
    print(f"Statistic: {stat:.4f}, p-value: {p_value:.4f}")

    if p_value < alpha:
        print("Reject the null hypothesis: The means are significantly different.")
    else:
        print("Fail to reject the null hypothesis: No significant difference in means.")

    return test_used, stat, p_value


def compute_statistics(arr):
    """
    Compute descriptive statistics for a given dataset.
    """
    print(arr)
    print(np.mean(arr),
        np.std(arr, ddof=1),
        np.median(arr),
        np.min(arr),
        np.max(arr),
        stats.shapiro(arr).pvalue)
    return {
        "Mean": np.mean(arr),
        "Standard Deviation": np.std(arr, ddof=1),
        "Median": np.median(arr),
        "Min": np.min(arr),
        "Max": np.max(arr),
        "Shapiro-Wilk p-value (Normality Test)": stats.shapiro(arr).pvalue
    }


def plot_histograms(arr1, arr2):
    """
    Plot histograms of the two datasets side by side.
    """
    plt.figure(figsize=(10, 5))
    sns.histplot(arr1, color="blue", kde=True, label="SD", alpha=0.6, bins=10)
    sns.histplot(arr2, color="red", kde=True, label="GD", alpha=0.6, bins=10)
    plt.axvline(np.mean(arr1), color='blue', linestyle='dashed', linewidth=2)
    plt.axvline(np.mean(arr2), color='red', linestyle='dashed', linewidth=2)
    plt.title("Histogram")
    plt.xlabel("Value")
    plt.ylabel("Frequency")
    plt.legend()
    plt.show()



if __name__ == "__main__":
    # Example usage:
    arr1 = np.array(SD)
    arr2 = np.array(GD)

    arr1 = arr1[arr1!= 0]
    arr2 = arr2[arr2!= 0]
    # Perform Hypothesis Test
    test_used, stat, p_value = hypothesis_test(arr1, arr2)

    # Compute Descriptive Statistics
    stats1 = compute_statistics(arr1)
    stats2 = compute_statistics(arr2)

    # Convert to DataFrame for better display
    stats_df = pd.DataFrame([stats1, stats2], index=["SD", "GD"])
    print("\nDescriptive Statistics:\n", stats_df)

    # Plot Histograms
    plot_histograms(arr1, arr2)
